# 1. З клавіатури вводиться два рядки. Створити третій рядок, що складається
# з перших п'яти символів першого рядка і останніх двох символів другого рядка.

# 2. З клавіатури вводиться два цілих числа a і b. Напишіть програму, яка
# порівнює ці числа і в залежності від результату порівняння виводить на
# екран потрібний вираз.

# 3. Користувач вводить рядок, в якому можуть бути присутні пропуски.
# Визначити, чи є рядок паліндромом, тобто таким, який однаково читається
# як справа наліво, так і зліва направо. Для літер регістр не враховувати.

# ------------------------------------------------------------------------------

# 1. Створити третій рядок, що складається з перших п'яти символів
# першого рядка і останніх двох символів другого рядка.
string_1 = input("Рядок 1: ")
string_2 = input("Рядок 2: ")
string_3 = string_1[:5] + string_2[-2:]
print(f"{string_1[:5]} + {string_2[-2:]} =", string_3, "\n")

# 2. З клавіатури вводиться два цілих числа a і b. Напишіть програму, яка
# порівнює ці числа і в залежності від результату порівняння виводить на
# екран потрібний вираз.
a = int(input("Число a: "))
b = int(input("Число b: "))
# Проверка: Если А больше Б
if a > b:
    print(a, ">", b)
# Проверка: Если А меньше Б
elif a < b:
    print(a, "<", b)
#  Проверка: Всё остальное, но там ток равно (=)
else:
    print(a, "=", b)
print()


# 3. Визначити, чи є рядок паліндромом, тобто таким, який однаково читається
# як справа наліво, так і зліва направо. Для літер регістр не враховувати.
# Введення даних
text = input("Text: ")  # Утро чорту / а роза упала на лапу Азора

# Створюємо змінну для змін - text_cache :)
# replace(змінити що?, на що змінити)
# lower() - зробити усі маленьки буковки
# upper() -зробити усі BIG буковки
text_cache = text.replace(" ", "").lower()
print(text_cache)
# Прапорець на паліндром
palindrome = True
# Вкладуємо число кількості букв
# len(змінна текстова) - рахуємо кількість букв
len_text = len(text_cache)
# Перевіряємо парне чи ні, бо наш for розрахован на парні,
# якщо воно не парне, то ми знімаємо 1 для перевірки
# 4 3 2 1 Х 1 2 3 4
# у т р о ч о р т у
if len_text % 2 != 0:
    len_text = len_text - 1
# Робимо цикл який рахує від 0 до розміру тексту
for num in range(int(len_text/2)):
    # Умова буква на місці num не дорівнює букві под цим номером з кінця
    # -> 4 3 2 1 Х 1 2 3 4 <- | -> 3 2 1 Х 1 2 3 <-
    # -> у т р о ч о р т у <- | -> т р о ч о р т <-
    # text_cache[-(num + 1)] +1 треба бо рахунок з 0, а -0 то є 0, а нам треба останній елемент
    if text_cache[num] != text_cache[-(num + 1)]:
        # Якщо знайшли то пишимо що за буква
        print(f"{text_cache[num]} != {text_cache[-(num + 1)]} (пiд ном. {num+1})")
        # якщо не сходиться то це не паліндромом
        palindrome = False
        # Брик то виход з циклу for
        break

# Перевірка прапорця та опис
if palindrome:
    print("То є паліндромом -", text)
else:
    print("То не є паліндромом -", text)
